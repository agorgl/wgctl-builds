name: build
on: [workflow_dispatch, push]

jobs:
  native:
    strategy:
      matrix:
        os: [ubuntu-latest]
        arch: [amd64]
        include:
          - os: ubuntu-latest
            target: linux

    runs-on: ${{ matrix.os }}
    permissions:
      contents: write

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          repository: agorgl/wgctl

      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup clojure
        run: |
          CLOJURE_VERSION=$(curl -s 'https://download.clojure.org/install/stable.properties' | awk '{ print $1 }')
          curl -O https://download.clojure.org/install/linux-install-${CLOJURE_VERSION}.sh
          chmod +x linux-install-${CLOJURE_VERSION}.sh
          sudo ./linux-install-${CLOJURE_VERSION}.sh
          echo "CLOJURE_VERSION=$CLOJURE_VERSION" >> "$GITHUB_ENV"

      - name: Setup graalvm
        uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Print info
        run: |
          echo "JAVA_HOME: $JAVA_HOME"
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "CLOJURE_VERSION: ${{ env.CLOJURE_VERSION }}"
          java --version
          clojure --version
          gu --version
          native-image --version

      - name: Release name
        id: release-name
        run: |
          RELEASE=latest
          echo "RELEASE=$RELEASE" >> "$GITHUB_OUTPUT"

      - name: Build native image
        id: build
        run: |
          mkdir dist
          clojure -T:build native
          JAR_OUTPUT=$(find target/ -iname *.jar)
          NATIVE_OUTPUT=${JAR_OUTPUT%.jar}
          OUTPUT_NAME=$(basename $NATIVE_OUTPUT | sed -r 's/-([0-9]+\.[0-9]+\.[0-9]).*$//')
          RELEASE=${{ steps.release-name.outputs.RELEASE }}
          cp $NATIVE_OUTPUT dist/${OUTPUT_NAME}-${RELEASE}-${{ matrix.target }}-${{ matrix.arch }}

      - name: Upload native image artifact
        uses: actions/upload-artifact@v3
        with:
          name: wgctl
          path: dist/*

      - name: Create release
        run: |
          RELEASE=${{ steps.release-name.outputs.RELEASE }}
          gh release delete -R $GITHUB_REPOSITORY $RELEASE --cleanup-tag --yes || true
          sleep 5
          gh release create -R $GITHUB_REPOSITORY $RELEASE -t $RELEASE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts to release
        run: |
          RELEASE=${{ steps.release-name.outputs.RELEASE }}
          gh release upload -R $GITHUB_REPOSITORY $RELEASE dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
